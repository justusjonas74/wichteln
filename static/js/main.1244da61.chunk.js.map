{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","inputValue","setInputValue","isLoading","setIsLoading","undefined","wichtel","setWichtelName","useEffect","fetchCodeWord","a","fetch","res","ok","body","toast","error","text","name","length","className","style","backgroundPosition","backgroundSize","backgroundRepeat","width","height","placeholder","type","onChange","e","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA+EeA,MArEf,WAEE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,wBAA6BK,GAA/D,mBAAOC,EAAP,KAAgBC,EAAhB,KAyBA,OAtBAC,qBAAU,WACR,IAAMC,EAAa,uCAAG,8BAAAC,EAAA,6DACpBN,GAAa,GADO,SAEFO,MAAM,QAAUV,GAFd,WAEdW,EAFc,QAIXC,IAAOD,EAAIE,KAJA,iBAKlBC,IAAMC,MAAM,mEACZZ,GAAa,GACbG,OAAeF,GAPG,yCASCO,EAAIK,OATL,QASZC,EATY,OAUlBd,GAAa,GACbG,EAAeW,GAXG,4CAAH,qDAefjB,EAAWkB,OAAS,GACtBV,MAGD,CAACR,IAGF,qCACE,cAAC,IAAD,IACA,qBAAKmB,UAAU,QAAQC,MAAO,CAC5BC,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBC,MAAO,QACPC,OAAQ,SALV,SAOE,qBAAKN,UAAU,YAAf,SAGE,qBAAKA,UAAU,6CAAf,SACE,sBAAKA,UAAU,sDAAf,UAEI,oBAAIA,UAAU,oBAAd,6BACA,mBAAGA,UAAU,OAAb,6DAEGd,IAAYH,GACb,uBAAOwB,YAAY,yBAAyBC,KAAK,OAAOR,UAAU,+BAA+BS,SAAU,SAACC,GAAD,OAAO5B,EAAc4B,EAAEC,OAAOC,WAExI1B,GAAWH,GACZ,cAEDG,GAAO,UACHA,YAQf,cAAC,IAAD,Q,MClEN2B,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1244da61.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Snowfall from 'react-snowfall'\n\n\n// minified version is also included\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport './App.css'\n\n\nfunction App() {\n\n  const [inputValue, setInputValue] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [wichtel, setWichtelName] = useState<string | undefined>(undefined)\n\n\n  useEffect(() => {\n    const fetchCodeWord = async () => {\n      setIsLoading(true)\n      const res = await fetch('data/' + inputValue)\n\n      if (!res.ok || !res.body) {\n        toast.error(\"Da hat etwas nicht geklappt. Vielleicht stimmt der Code nicht?!\")\n        setIsLoading(false)\n        setWichtelName(undefined)\n      } else {\n        const name = await res.text()\n        setIsLoading(false)\n        setWichtelName(name)\n      }\n    }\n\n    if (inputValue.length > 5) {\n      fetchCodeWord()\n    }\n\n  }, [inputValue])\n\n  return (\n    <>\n      <Snowfall />\n      <div className=\" Logo\" style={{\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        width: '100vw',\n        height: '100vh'\n      }}>\n        <div className=\"container\">\n\n\n          <div className=\"row vertical-center justify-content-center\">\n            <div className=\"p-5 mb-4 bg-light rounded-3 bg-opacity-75 col-md-6 \">\n    \n                <h1 className=\"display-5 fw-bold\">Wichtelmaschine</h1>\n                <p className=\"fs-4\">Für wen bin ich in diesem Jahr der Wichtel?</p>\n\n                {(!wichtel && !isLoading) &&\n                  <input placeholder=\"Hier den Code eingeben\" type=\"text\" className=\"form-control form-control-lg\" onChange={(e) => setInputValue(e.target.value)} />\n                }\n                {(!wichtel && isLoading) &&\n                  \"Lädt....\"\n                }\n                {wichtel &&\n                  `${wichtel}`\n                }\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}